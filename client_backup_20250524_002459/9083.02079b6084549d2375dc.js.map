{"version":3,"file":"9083.02079b6084549d2375dc.js","mappings":"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","sources":["webpack://mattermost-webapp/./src/components/header_footer_route/content_layouts/column.tsx","webpack://mattermost-webapp/./src/components/common/svg_images_components/man_with_mailbox_svg.tsx","webpack://mattermost-webapp/./src/components/should_verify_email/should_verify_email.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {type ReactNode} from 'react';\n\nimport Constants from 'utils/constants';\n\nimport './column.scss';\n\ntype ColumnProps = {\n    title: ReactNode;\n    message: ReactNode;\n    SVGElement?: React.ReactNode;\n    extraContent?: React.ReactNode;\n    onEnterKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst Column = ({title, message, SVGElement, extraContent, onEnterKeyDown}: ColumnProps) => {\n    const handleOnEnterKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (onEnterKeyDown && e.key === Constants.KeyCodes.ENTER[0]) {\n            onEnterKeyDown(e);\n        }\n    };\n\n    return (\n        <div\n            className='content-layout-column'\n            onKeyDown={handleOnEnterKeyDown}\n            tabIndex={0}\n        >\n            <div className='content-layout-column-svg'>\n                {SVGElement}\n            </div>\n            <h1 className='content-layout-column-title'>\n                {title}\n            </h1>\n            <p className='content-layout-column-message'>\n                {message}\n            </p>\n            {extraContent && (\n                <div className='content-layout-column-extra-content'>\n                    {extraContent}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Column;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\ntype SvgProps = {\n    width?: number;\n    height?: number;\n}\n\nconst Svg = (props: SvgProps) => (\n    <svg\n        width={props.width?.toString() || '206'}\n        height={props.height?.toString() || '180'}\n        viewBox='0 0 206 180'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n        xmlnsXlink='http://www.w3.org/1999/xlink'\n    >\n        <g clipPath='url(#clip0_4212_99069)'>\n            <ellipse\n                cx='103.446'\n                cy='90'\n                rx='89.25'\n                ry='89.25'\n                fill='var(--center-channel-color)'\n                fillOpacity='0.08'\n            />\n            <path\n                d='M3.03955 75.2739L3.03955 88.6614L175.292 88.6614L175.292 102.941L200.728 102.941'\n                stroke='var(--center-channel-color)'\n                strokeOpacity='0.32'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <path\n                d='M36.9551 123.021L36.9551 98.924L60.6063 98.924'\n                stroke='var(--center-channel-color)'\n                strokeOpacity='0.32'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <ellipse\n                cx='2.23125'\n                cy='2.23125'\n                rx='2.23125'\n                ry='2.23125'\n                transform='matrix(1 8.74228e-08 8.74228e-08 -1 0.808594 75.7207)'\n                fill='var(--center-channel-color)'\n                fillOpacity='0.56'\n            />\n            <ellipse\n                cx='2.23125'\n                cy='2.23125'\n                rx='2.23125'\n                ry='2.23125'\n                transform='matrix(1 8.74228e-08 8.74228e-08 -1 34.7236 127.485)'\n                fill='var(--center-channel-color)'\n                fillOpacity='0.56'\n            />\n            <ellipse\n                cx='2.23125'\n                cy='2.23125'\n                rx='2.23125'\n                ry='2.23125'\n                transform='matrix(1 8.74228e-08 8.74228e-08 -1 198.943 105.173)'\n                fill='var(--center-channel-color)'\n                fillOpacity='0.56'\n            />\n            <path\n                d='M48.9995 65.9045L104.116 23.957C126.174 40.7447 158.777 65.9045 158.777 65.9045V143.552H48.9995V65.9045Z'\n                fill='white'\n                stroke='var(--center-channel-color)'\n                strokeWidth='1.5'\n                strokeLinejoin='round'\n            />\n            <path\n                fillRule='evenodd'\n                clipRule='evenodd'\n                d='M52.2793 66.9705L104.105 27.5273C124.846 43.3128 155.503 66.9705 155.503 66.9705H52.2793ZM155.503 66.9712H52.2793V139.983H155.503V66.9712Z'\n                fill='var(--center-channel-color)'\n                fillOpacity='0.24'\n            />\n            <mask\n                id='mask0_4212_99069'\n                mask-type='alpha'\n                maskUnits='userSpaceOnUse'\n                x='51'\n                y='34'\n                width='106'\n                height='73'\n            >\n                <path\n                    d='M104.109 106.959L51.6807 67.689V34.6665H156.103V67.689C156.103 67.689 125.091 91.2429 104.109 106.959Z'\n                    fill='#D9D9D9'\n                />\n            </mask>\n            <g mask='url(#mask0_4212_99069)'>\n                <rect\n                    x='138.396'\n                    y='38.9854'\n                    width='99.3525'\n                    height='69.0075'\n                    transform='rotate(90 138.396 38.9854)'\n                    fill='white'\n                    stroke='var(--center-channel-color)'\n                    strokeWidth='1.5'\n                />\n            </g>\n            <path\n                d='M104.338 89.596C112.717 89.596 119.51 82.803 119.51 74.4235C119.51 66.0439 112.717 59.251 104.338 59.251C95.958 59.251 89.165 66.0439 89.165 74.4235C89.165 82.803 95.958 89.596 104.338 89.596Z'\n                fill='#3DB887'\n            />\n            <path\n                d='M97.5586 74.75L102.456 79.175L111.809 69.5'\n                stroke='white'\n                strokeWidth='1.785'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n            />\n            <path\n                d='M104.107 106.908L156.994 66.7969V142.659H50.7866V66.7969L104.107 106.908Z'\n                fill='white'\n            />\n            <path\n                d='M51.6797 67.689L104.108 106.959C125.09 91.2429 156.102 67.689 156.102 67.689'\n                stroke='var(--center-channel-color)'\n                strokeWidth='1.5'\n                strokeLinejoin='round'\n            />\n            <path\n                d='M130.559 147.751L102.809 147.751'\n                stroke='var(--center-channel-color)'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n            />\n            <path\n                d='M98.3091 147.751L89.3091 147.751'\n                stroke='var(--center-channel-color)'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n            />\n            <path\n                d='M84.8091 147.751L81.8091 147.751'\n                stroke='var(--center-channel-color)'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n            />\n            <path\n                d='M45.2648 45.5696L53.3086 53.5975V14.7079C53.3086 13.722 52.5094 12.9229 51.5236 12.9229H15.411C14.4251 12.9229 13.626 13.722 13.626 14.7079V43.7846C13.626 44.7705 14.4251 45.5696 15.411 45.5696H45.2648Z'\n                fill='#CCC4AE'\n            />\n            <path\n                d='M23.5439 22.8438H35.4487'\n                stroke='var(--center-channel-color)'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <path\n                d='M23.5439 27.8047H45.3694'\n                stroke='var(--center-channel-color)'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <path\n                d='M23.5439 33.7559H32.4725'\n                stroke='var(--center-channel-color)'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <path\n                d='M34.457 33.7559H43.3856'\n                stroke='var(--center-channel-color)'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <path\n                d='M158.29 51.2478L146.288 63.2261V4.32113C146.288 3.3353 147.087 2.53613 148.073 2.53613H203.712C204.698 2.53613 205.497 3.33531 205.497 4.32114V49.4628C205.497 50.4487 204.698 51.2478 203.712 51.2478H158.29Z'\n                fill='#28427B'\n            />\n            <path\n                d='M161.091 17.3379H178.854'\n                stroke='white'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <path\n                d='M161.091 24.7402H193.656'\n                stroke='white'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <path\n                d='M161.091 33.6211H174.413'\n                stroke='white'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <path\n                d='M177.374 33.6211H190.696'\n                stroke='white'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n            />\n            <rect\n                x='89.3086'\n                y='45.75'\n                width='29.25'\n                height='6.75'\n                rx='2.25'\n                fill='var(--center-channel-color)'\n                fillOpacity='0.16'\n            />\n            <path\n                d='M54.0586 78V138H87.8086M90.8086 138H96.8086M99.8086 138H102.809'\n                stroke='var(--center-channel-color)'\n                strokeOpacity='0.32'\n                strokeWidth='1.5'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n            />\n        </g>\n        <defs>\n            <clipPath id='clip0_4212_99069'>\n                <rect\n                    width='204.383'\n                    height='178.5'\n                    fill='white'\n                    transform='translate(0.808594 0.75)'\n                />\n            </clipPath>\n        </defs>\n    </svg>\n);\n\nexport default Svg;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport React, {useState, useCallback, useEffect} from 'react';\nimport {useIntl} from 'react-intl';\nimport {useDispatch} from 'react-redux';\nimport {useLocation, useHistory} from 'react-router-dom';\n\nimport {sendVerificationEmail} from 'mattermost-redux/actions/users';\n\nimport {trackEvent} from 'actions/telemetry_actions';\n\nimport ManWithMailboxSVG from 'components/common/svg_images_components/man_with_mailbox_svg';\nimport ColumnLayout from 'components/header_footer_route/content_layouts/column';\nimport SaveButton from 'components/save_button';\n\nimport {getRoleFromTrackFlow} from 'utils/utils';\n\nimport './should_verify_email.scss';\n\nconst enum ResendStatus {\n    PENDING = 'pending',\n    SUCCESS = 'success',\n    FAILURE = 'failure',\n}\n\nconst ShouldVerifyEmail = () => {\n    const {formatMessage} = useIntl();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {search} = useLocation();\n\n    const params = new URLSearchParams(search);\n    const email = params.get('email') ?? '';\n\n    const [resendStatus, setResendStatus] = useState(ResendStatus.PENDING);\n    const [isWaiting, setIsWaiting] = useState(false);\n\n    useEffect(() => {\n        trackEvent('signup', 'should_verify_email', getRoleFromTrackFlow());\n    }, []);\n\n    const handleReturnButtonOnClick = useCallback(() => {\n        history.push('/');\n    }, [history]);\n\n    const handleResendButtonOnClick = async () => {\n        if (email) {\n            setIsWaiting(true);\n            setResendStatus(ResendStatus.PENDING);\n\n            const {error} = await dispatch(sendVerificationEmail(email));\n\n            if (error) {\n                setResendStatus(ResendStatus.FAILURE);\n                setIsWaiting(false);\n                return;\n            }\n\n            setResendStatus(ResendStatus.SUCCESS);\n            setIsWaiting(false);\n        }\n    };\n\n    return (\n        <div className='should-verify-body'>\n            <div className='should-verify-body-content'>\n                <ColumnLayout\n                    title={formatMessage({id: 'email_verify.almost', defaultMessage: 'You’re almost done!'})}\n                    message={formatMessage({id: 'email_verify.notVerifiedBody', defaultMessage: 'Please verify your email address. Check your inbox for an email.'})}\n                    SVGElement={<ManWithMailboxSVG width={284}/>}\n                    extraContent={(\n                        <div className='should-verify-body-content-extra'>\n                            <div className='should-verify-body-content-buttons'>\n                                <SaveButton\n                                    extraClasses='should-verify-body-content-button-resend large'\n                                    saving={isWaiting}\n                                    disabled={!email}\n                                    onClick={handleResendButtonOnClick}\n                                    defaultMessage={formatMessage({id: 'email_verify.resend', defaultMessage: 'Resend Email'})}\n                                    savingMessage={formatMessage({id: 'email_verify.sending', defaultMessage: 'Sending email…'})}\n                                />\n                                <button\n                                    className='should-verify-body-content-button-return'\n                                    onClick={handleReturnButtonOnClick}\n                                >\n                                    {formatMessage({id: 'email_verify.return', defaultMessage: 'Return to log in'})}\n                                </button>\n                            </div>\n                            <div className={classNames('should-verify-body-content-message', resendStatus)}>\n                                <i\n                                    className={classNames(\n                                        'should-verify-body-content-message-icon',\n                                        'icon',\n                                        'icon-12',\n                                        {\n                                            'icon-check': resendStatus === ResendStatus.SUCCESS,\n                                            'icon-alert-outline': resendStatus === ResendStatus.FAILURE,\n                                        },\n                                    )}\n                                />\n                                <span className='should-verify-body-content-message-label'>\n                                    {resendStatus === ResendStatus.SUCCESS ? (\n                                        formatMessage({id: 'email_verify.sent', defaultMessage: 'Verification email sent'})\n                                    ) : (\n                                        (resendStatus === ResendStatus.FAILURE && formatMessage({id: 'email_verify.failed', defaultMessage: 'Failed to send verification email'})) ||\n                                        ''\n                                    )}\n                                </span>\n                            </div>\n                        </div>\n                    )}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ShouldVerifyEmail;\n"],"names":["Column","_ref","title","message","SVGElement","extraContent","onEnterKeyDown","React","className","onKeyDown","e","key","Constants","KeyCodes","ENTER","tabIndex","propTypes","_pt","isRequired","Svg","props","_props$width","_props$height","width","toString","height","viewBox","fill","xmlns","xmlnsXlink","clipPath","cx","cy","rx","ry","fillOpacity","d","stroke","strokeOpacity","strokeWidth","strokeLinecap","transform","strokeLinejoin","fillRule","clipRule","id","maskUnits","x","y","mask","ResendStatus","ShouldVerifyEmail","_params$get","formatMessage","useIntl","dispatch","useDispatch","history","useHistory","search","useLocation","email","URLSearchParams","get","resendStatus","setResendStatus","useState","PENDING","isWaiting","setIsWaiting","useEffect","trackEvent","getRoleFromTrackFlow","handleReturnButtonOnClick","useCallback","push","ColumnLayout","defaultMessage","ManWithMailboxSVG","SaveButton","extraClasses","saving","disabled","onClick","async","error","sendVerificationEmail","FAILURE","SUCCESS","savingMessage","classNames"],"sourceRoot":""}