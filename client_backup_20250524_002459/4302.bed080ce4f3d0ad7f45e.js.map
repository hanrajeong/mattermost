{"version":3,"file":"4302.bed080ce4f3d0ad7f45e.js","mappings":"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","sources":["webpack://mattermost-webapp/./src/components/widgets/icons/leave_team_icon.tsx","webpack://mattermost-webapp/./src/components/mobile_sidebar_right/mobile_sidebar_right_items/mobile_sidebar_right_items.tsx","webpack://mattermost-webapp/./src/components/mobile_sidebar_right/mobile_sidebar_right_items/index.tsx","webpack://mattermost-webapp/./src/components/mobile_sidebar_right/mobile_sidebar_right.tsx","webpack://mattermost-webapp/./src/components/mobile_sidebar_right/index.ts"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport type {CSSProperties} from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function LeaveTeamIcon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n    return (\n        <span {...props}>\n            <svg\n                width='100%'\n                height='100%'\n                viewBox='0 0 164 164'\n                style={style}\n                role='img'\n                aria-label={formatMessage({id: 'navbar_dropdown.leave.icon', defaultMessage: 'Leave Team Icon'})}\n            >\n                <path d='M26.023,164L26.023,7.035L26.022,0.32L137.658,0.32L137.658,164L124.228,164L124.228, 13.749L39.452,13.749L39.452,164L26.023, 164ZM118.876,164L118.876,18.619L58.137,32.918L58.137,149.701L118.876,164Z'/>\n            </svg>\n        </span>\n    );\n}\n\nconst style: CSSProperties = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {injectIntl} from 'react-intl';\nimport type {WrappedComponentProps} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions';\nimport {trackEvent} from 'actions/telemetry_actions';\n\nimport AboutBuildModal from 'components/about_build_modal';\nimport AddGroupsToTeamModal from 'components/add_groups_to_team_modal';\nimport InvitationModal from 'components/invitation_modal';\nimport LeaveTeamModal from 'components/leave_team_modal';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\nimport TeamGroupsManageModal from 'components/team_groups_manage_modal';\nimport TeamMembersModal from 'components/team_members_modal';\nimport TeamSettingsModal from 'components/team_settings_modal';\nimport UserSettingsModal from 'components/user_settings/modal';\nimport LeaveTeamIcon from 'components/widgets/icons/leave_team_icon';\nimport Menu from 'components/widgets/menu/menu';\n\nimport {ModalIdentifiers} from 'utils/constants';\nimport {makeUrlSafe} from 'utils/url';\n\nimport type {PropsFromRedux} from './index';\n\nexport interface Props extends PropsFromRedux, WrappedComponentProps {\n    usageDeltaTeams: number;\n}\n\nexport class MobileSidebarRightItems extends React.PureComponent<Props> {\n    static defaultProps = {\n        pluginMenuItems: [],\n    };\n\n    onRecentMentionItemClick = (e: Event): void => {\n        e.preventDefault();\n\n        if (this.props.isMentionSearch) {\n            this.props.actions.closeRightHandSide();\n        } else {\n            this.props.actions.closeRhsMenu();\n            this.props.actions.showMentions();\n        }\n    };\n\n    onShowFlaggedPostItemClick = (e: Event): void => {\n        e.preventDefault();\n        this.props.actions.showFlaggedPosts();\n        this.props.actions.closeRhsMenu();\n    };\n\n    onLogoutItemClick = (): void => {\n        emitUserLoggedOutEvent();\n    };\n\n    render() {\n        const {formatMessage} = this.props.intl;\n\n        const safeAppDownloadLink = makeUrlSafe(this.props.appDownloadLink || '');\n        const teamsLimitReached = this.props.isStarterFree && !this.props.isFreeTrial && this.props.usageDeltaTeams >= 0;\n\n        const pluginItems = this.props.pluginMenuItems.map((item) => (\n            <Menu.ItemAction\n                id={item.id + '_pluginmenuitem'}\n                key={item.id + '_pluginmenuitem'}\n                onClick={() => {\n                    if (item.action) {\n                        item.action();\n                    }\n                }}\n                text={item.text}\n                icon={item.mobileIcon}\n            />\n        ));\n\n        return (\n            <Menu\n                ariaLabel={formatMessage({id: 'navbar_dropdown.menuAriaLabel', defaultMessage: 'main menu'})}\n            >\n                <Menu.Group>\n                    <SystemPermissionGate\n                        permissions={[Permissions.SYSCONSOLE_WRITE_BILLING]}\n                    >\n                        <Menu.CloudTrial\n                            id='menuCloudTrial'\n                        />\n                    </SystemPermissionGate>\n                </Menu.Group>\n                <Menu.Group>\n                    <SystemPermissionGate\n                        permissions={[Permissions.SYSCONSOLE_WRITE_ABOUT_EDITION_AND_LICENSE]}\n                    >\n                        <Menu.StartTrial\n                            id='startTrial'\n                        />\n                    </SystemPermissionGate>\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemAction\n                        id='recentMentions'\n                        onClick={this.onRecentMentionItemClick}\n                        icon={<i className='mentions'>{'@'}</i>}\n                        text={formatMessage({id: 'sidebar_right_menu.recentMentions', defaultMessage: 'Recent Mentions'})}\n                    />\n                    <Menu.ItemAction\n                        id='flaggedPosts'\n                        onClick={this.onShowFlaggedPostItemClick}\n                        icon={<i className='fa fa-bookmark'/>}\n                        text={formatMessage({id: 'sidebar_right_menu.flagged', defaultMessage: 'Saved messages'})}\n                    />\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemToggleModalRedux\n                        id='profileSettings'\n                        modalId={ModalIdentifiers.USER_SETTINGS}\n                        dialogType={UserSettingsModal}\n                        dialogProps={{isContentProductSettings: false}}\n                        text={formatMessage({id: 'navbar_dropdown.profileSettings', defaultMessage: 'Profile'})}\n                        icon={<i className='fa fa-user'/>}\n                    />\n                    <Menu.ItemToggleModalRedux\n                        id='accountSettings'\n                        modalId={ModalIdentifiers.USER_SETTINGS}\n                        dialogType={UserSettingsModal}\n                        dialogProps={{isContentProductSettings: true}}\n                        text={formatMessage({id: 'navbar_dropdown.accountSettings', defaultMessage: 'Settings'})}\n                        icon={<i className='fa fa-cog'/>}\n                    />\n                </Menu.Group>\n                <Menu.Group>\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.MANAGE_TEAM]}\n                    >\n                        <Menu.ItemToggleModalRedux\n                            id='addGroupsToTeam'\n                            show={this.props.teamIsGroupConstrained && this.props.isLicensedForLDAPGroups}\n                            modalId={ModalIdentifiers.ADD_GROUPS_TO_TEAM}\n                            dialogType={AddGroupsToTeamModal}\n                            text={formatMessage({id: 'navbar_dropdown.addGroupsToTeam', defaultMessage: 'Add Groups to Team'})}\n                            icon={<i className='fa fa-user-plus'/>}\n                        />\n                    </TeamPermissionGate>\n                    {this.props.guestAccessEnabled && (\n                        <TeamPermissionGate\n                            teamId={this.props.teamId}\n                            permissions={[Permissions.ADD_USER_TO_TEAM, Permissions.INVITE_GUEST]}\n                        >\n                            <Menu.ItemToggleModalRedux\n                                id='invitePeople'\n                                modalId={ModalIdentifiers.INVITATION}\n                                dialogType={InvitationModal}\n                                text={formatMessage({\n                                    id: 'navbar_dropdown.invitePeople',\n                                    defaultMessage: 'Invite People',\n                                })}\n                                extraText={formatMessage({\n                                    id: 'navbar_dropdown.invitePeopleExtraText',\n                                    defaultMessage: 'Add people to the team',\n                                })}\n                                icon={<i className='fa fa-user-plus'/>}\n                                onClick={() => trackEvent('ui', 'click_sidebar_team_dropdown_invite_people')}\n                            />\n                        </TeamPermissionGate>\n                    )}\n                </Menu.Group>\n                <Menu.Group>\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.MANAGE_TEAM]}\n                    >\n                        <Menu.ItemToggleModalRedux\n                            id='teamSettings'\n                            modalId={ModalIdentifiers.TEAM_SETTINGS}\n                            dialogType={TeamSettingsModal}\n                            text={formatMessage({id: 'navbar_dropdown.teamSettings', defaultMessage: 'Team Settings'})}\n                            icon={<i className='fa fa-globe'/>}\n                        />\n                    </TeamPermissionGate>\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.MANAGE_TEAM]}\n                    >\n                        <Menu.ItemToggleModalRedux\n                            id='manageGroups'\n                            show={this.props.teamIsGroupConstrained && this.props.isLicensedForLDAPGroups}\n                            modalId={ModalIdentifiers.MANAGE_TEAM_GROUPS}\n                            dialogProps={{\n                                teamID: this.props.teamId,\n                            }}\n                            dialogType={TeamGroupsManageModal}\n                            text={formatMessage({id: 'navbar_dropdown.manageGroups', defaultMessage: 'Manage Groups'})}\n                            icon={<i className='fa fa-user-plus'/>}\n                        />\n                    </TeamPermissionGate>\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.REMOVE_USER_FROM_TEAM, Permissions.MANAGE_TEAM_ROLES]}\n                    >\n                        <Menu.ItemToggleModalRedux\n                            id='manageMembers'\n                            modalId={ModalIdentifiers.TEAM_MEMBERS}\n                            dialogType={TeamMembersModal}\n                            text={formatMessage({id: 'navbar_dropdown.manageMembers', defaultMessage: 'Manage Members'})}\n                            icon={<i className='fa fa-users'/>}\n                        />\n                    </TeamPermissionGate>\n                    <TeamPermissionGate\n                        teamId={this.props.teamId}\n                        permissions={[Permissions.REMOVE_USER_FROM_TEAM, Permissions.MANAGE_TEAM_ROLES]}\n                        invert={true}\n                    >\n                        <Menu.ItemToggleModalRedux\n                            id='viewMembers'\n                            modalId={ModalIdentifiers.TEAM_MEMBERS}\n                            dialogType={TeamMembersModal}\n                            text={formatMessage({id: 'navbar_dropdown.viewMembers', defaultMessage: 'View Members'})}\n                            icon={<i className='fa fa-users'/>}\n                        />\n                    </TeamPermissionGate>\n                </Menu.Group>\n                <Menu.Group>\n                    <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                        <Menu.ItemLink\n                            id='createTeam'\n                            show={!teamsLimitReached}\n                            to='/create_team'\n                            text={formatMessage({id: 'navbar_dropdown.create', defaultMessage: 'Create a Team'})}\n                            icon={<i className='fa fa-plus-square'/>}\n                        />\n                    </SystemPermissionGate>\n                    <Menu.ItemLink\n                        id='joinTeam'\n                        show={!this.props.experimentalPrimaryTeam && this.props.moreTeamsToJoin}\n                        to='/select_team'\n                        text={formatMessage({id: 'navbar_dropdown.join', defaultMessage: 'Join Another Team'})}\n                        icon={<i className='fa fa-plus-square'/>}\n                    />\n                    <Menu.ItemToggleModalRedux\n                        id='leaveTeam'\n                        show={!this.props.teamIsGroupConstrained && this.props.experimentalPrimaryTeam !== this.props.teamName}\n                        modalId={ModalIdentifiers.LEAVE_TEAM}\n                        dialogType={LeaveTeamModal}\n                        text={formatMessage({id: 'navbar_dropdown.leave', defaultMessage: 'Leave Team'})}\n                        icon={<LeaveTeamIcon/>}\n                    />\n                </Menu.Group>\n                <Menu.Group>\n                    {pluginItems}\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemExternalLink\n                        id='helpLink'\n                        show={Boolean(this.props.helpLink)}\n                        url={this.props.helpLink}\n                        text={formatMessage({id: 'navbar_dropdown.help', defaultMessage: 'Help'})}\n                        icon={<i className='fa fa-question'/>}\n                    />\n                    <Menu.ItemExternalLink\n                        id='reportLink'\n                        show={Boolean(this.props.reportAProblemLink)}\n                        url={this.props.reportAProblemLink}\n                        text={formatMessage({id: 'navbar_dropdown.report', defaultMessage: 'Report a Problem'})}\n                        icon={<i className='fa fa-phone'/>}\n                    />\n                    <Menu.ItemExternalLink\n                        id='nativeAppLink'\n                        show={this.props.appDownloadLink}\n                        url={safeAppDownloadLink}\n                        text={formatMessage({id: 'navbar_dropdown.nativeApps', defaultMessage: 'Download Apps'})}\n                        icon={<i className='fa fa-mobile'/>}\n                    />\n                    <Menu.ItemToggleModalRedux\n                        id='about'\n                        modalId={ModalIdentifiers.ABOUT}\n                        dialogType={AboutBuildModal}\n                        text={formatMessage({id: 'navbar_dropdown.about', defaultMessage: 'About {appTitle}'}, {appTitle: this.props.siteName || 'Mattermost'})}\n                        icon={<i className='fa fa-info'/>}\n                    />\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemAction\n                        id='logout'\n                        onClick={this.onLogoutItemClick}\n                        text={formatMessage({id: 'navbar_dropdown.logout', defaultMessage: 'Log Out'})}\n                        icon={<i className='fa fa-sign-out'/>}\n                    />\n                </Menu.Group>\n            </Menu>\n        );\n    }\n}\n\nexport default injectIntl(MobileSidebarRightItems);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport type {ConnectedProps} from 'react-redux';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport type {Dispatch} from 'redux';\n\nimport {getCloudSubscription as selectCloudSubscription, getSubscriptionProduct} from 'mattermost-redux/selectors/entities/cloud';\nimport {\n    getConfig,\n    getLicense,\n} from 'mattermost-redux/selectors/entities/general';\nimport {getReportAProblemLink} from 'mattermost-redux/selectors/entities/report_a_problem';\nimport {\n    getJoinableTeamIds,\n    getCurrentTeam,\n} from 'mattermost-redux/selectors/entities/teams';\n\nimport {showMentions, showFlaggedPosts, closeRightHandSide, closeMenu as closeRhsMenu} from 'actions/views/rhs';\nimport {getRhsState} from 'selectors/rhs';\n\nimport {RHSStates, CloudProducts} from 'utils/constants';\nimport {isCloudLicense} from 'utils/license_utils';\n\nimport type {GlobalState} from 'types/store';\n\nimport MobileSidebarRightItems from './mobile_sidebar_right_items';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const currentTeam = getCurrentTeam(state);\n\n    const appDownloadLink = config.AppDownloadLink;\n    const siteName = config.SiteName;\n    const experimentalPrimaryTeam = config.ExperimentalPrimaryTeam;\n    const helpLink = config.HelpLink;\n    const reportAProblemLink = getReportAProblemLink(state);\n\n    const joinableTeams = getJoinableTeamIds(state);\n    const moreTeamsToJoin = joinableTeams && joinableTeams.length > 0;\n    const rhsState = getRhsState(state);\n\n    const subscription = selectCloudSubscription(state);\n    const license = getLicense(state);\n    const subscriptionProduct = getSubscriptionProduct(state);\n\n    const isCloud = isCloudLicense(license);\n    const isStarterFree = isCloud && subscriptionProduct?.sku === CloudProducts.STARTER;\n    const isFreeTrial = isCloud && subscription?.is_free_trial === 'true';\n\n    return {\n        appDownloadLink,\n        experimentalPrimaryTeam,\n        helpLink,\n        reportAProblemLink,\n        pluginMenuItems: state.plugins.components.MainMenu,\n        moreTeamsToJoin,\n        siteName,\n        teamId: currentTeam?.id,\n        teamName: currentTeam?.name,\n        isMentionSearch: rhsState === RHSStates.MENTION,\n        teamIsGroupConstrained: Boolean(currentTeam?.group_constrained),\n        isLicensedForLDAPGroups: state.entities.general.license.LDAPGroups === 'true',\n        guestAccessEnabled: config.EnableGuestAccounts === 'true',\n        isStarterFree,\n        isFreeTrial,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators({\n            showMentions,\n            showFlaggedPosts,\n            closeRightHandSide,\n            closeRhsMenu,\n        }, dispatch),\n    };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport type PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(MobileSidebarRightItems);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport React, {memo} from 'react';\nimport {CSSTransition} from 'react-transition-group';\n\nimport useGetUsageDeltas from 'components/common/hooks/useGetUsageDeltas';\n\nimport MobileRightDrawerItems from './mobile_sidebar_right_items';\n\nimport type {PropsFromRedux} from './index';\nimport './mobile_sidebar_right.scss';\n\nconst TRANSITION_TIMEOUT = 300; // in ms\n\ntype Props = PropsFromRedux;\n\nconst MobileRightDrawer = ({\n    isOpen,\n    currentUser,\n}: Props) => {\n    const usageDeltas = useGetUsageDeltas();\n\n    if (!currentUser) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classNames('sidebar--menu', {'move--left': isOpen})}\n            id='sidebar-menu'\n        >\n            <div className='nav-pills__container mobile-main-menu'>\n                <CSSTransition\n                    in={isOpen}\n                    enter={true}\n                    exit={true}\n                    mountOnEnter={true}\n                    unmountOnExit={true}\n                    timeout={TRANSITION_TIMEOUT}\n                >\n                    <MobileRightDrawerItems\n                        usageDeltaTeams={usageDeltas.teams.active}\n                    />\n                </CSSTransition>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(MobileRightDrawer);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport type {ConnectedProps} from 'react-redux';\nimport {connect} from 'react-redux';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {getIsRhsMenuOpen} from 'selectors/rhs';\n\nimport type {GlobalState} from 'types/store';\n\nimport MobileSidebarRight from './mobile_sidebar_right';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        currentUser: getCurrentUser(state),\n        isOpen: getIsRhsMenuOpen(state),\n    };\n}\n\nconst connector = connect(mapStateToProps);\n\nexport type PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connect(mapStateToProps)(MobileSidebarRight);\n"],"names":["LeaveTeamIcon","props","formatMessage","useIntl","React","width","height","viewBox","style","role","id","defaultMessage","d","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","MobileSidebarRightItems","constructor","arguments","_defineProperty","e","preventDefault","this","isMentionSearch","actions","closeRightHandSide","closeRhsMenu","showMentions","showFlaggedPosts","emitUserLoggedOutEvent","render","intl","safeAppDownloadLink","makeUrlSafe","appDownloadLink","teamsLimitReached","isStarterFree","isFreeTrial","usageDeltaTeams","pluginItems","pluginMenuItems","map","item","Menu","ItemAction","key","onClick","action","text","icon","mobileIcon","ariaLabel","Group","SystemPermissionGate","permissions","Permissions","SYSCONSOLE_WRITE_BILLING","CloudTrial","SYSCONSOLE_WRITE_ABOUT_EDITION_AND_LICENSE","StartTrial","onRecentMentionItemClick","className","onShowFlaggedPostItemClick","ItemToggleModalRedux","modalId","ModalIdentifiers","USER_SETTINGS","dialogType","UserSettingsModal","dialogProps","isContentProductSettings","TeamPermissionGate","teamId","MANAGE_TEAM","show","teamIsGroupConstrained","isLicensedForLDAPGroups","ADD_GROUPS_TO_TEAM","AddGroupsToTeamModal","guestAccessEnabled","ADD_USER_TO_TEAM","INVITE_GUEST","INVITATION","InvitationModal","extraText","trackEvent","TEAM_SETTINGS","TeamSettingsModal","MANAGE_TEAM_GROUPS","teamID","TeamGroupsManageModal","REMOVE_USER_FROM_TEAM","MANAGE_TEAM_ROLES","TEAM_MEMBERS","TeamMembersModal","invert","CREATE_TEAM","ItemLink","to","experimentalPrimaryTeam","moreTeamsToJoin","teamName","LEAVE_TEAM","LeaveTeamModal","ItemExternalLink","Boolean","helpLink","url","reportAProblemLink","ABOUT","AboutBuildModal","appTitle","siteName","onLogoutItemClick","_pt","isRequired","injectIntl","connect","state","config","getConfig","currentTeam","getCurrentTeam","AppDownloadLink","SiteName","ExperimentalPrimaryTeam","HelpLink","getReportAProblemLink","joinableTeams","getJoinableTeamIds","length","rhsState","getRhsState","subscription","selectCloudSubscription","license","getLicense","subscriptionProduct","getSubscriptionProduct","isCloud","isCloudLicense","sku","CloudProducts","STARTER","is_free_trial","plugins","components","MainMenu","name","RHSStates","MENTION","group_constrained","entities","general","LDAPGroups","EnableGuestAccounts","dispatch","bindActionCreators","MobileRightDrawer","_ref","isOpen","currentUser","usageDeltas","useGetUsageDeltas","classNames","CSSTransition","in","enter","exit","mountOnEnter","unmountOnExit","timeout","MobileRightDrawerItems","teams","active","memo","mapStateToProps","getCurrentUser","getIsRhsMenuOpen","MobileSidebarRight"],"sourceRoot":""}