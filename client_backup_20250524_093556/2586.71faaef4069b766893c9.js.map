{"version":3,"file":"2586.71faaef4069b766893c9.js","mappings":"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","sources":["webpack://mattermost-webapp/./node_modules/react-select/dist/useCreatable-84008237.esm.js","webpack://mattermost-webapp/./src/components/common/hooks/useCopyText.ts","webpack://mattermost-webapp/./src/components/widgets/icons/mail_icon.tsx","webpack://mattermost-webapp/./node_modules/react-select/async-creatable/dist/react-select-async-creatable.esm.js","webpack://mattermost-webapp/./src/components/widgets/icons/mail_plus_icon.tsx","webpack://mattermost-webapp/./src/components/widgets/inputs/users_emails_input.tsx","webpack://mattermost-webapp/../node_modules/core-js/modules/es.promise.all-settled.js","webpack://mattermost-webapp/../node_modules/core-js/modules/esnext.promise.all-settled.js"],"sourcesContent":["import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useMemo, useCallback } from 'react';\nimport { H as cleanValue, D as valueTernary } from './index-641ee5b8.esm.js';\nimport { g as getOptionValue, b as getOptionLabel } from './Select-aab027f3.esm.js';\n\nvar _excluded = [\"allowCreateWhileLoading\", \"createOptionPosition\", \"formatCreateLabel\", \"isValidNewOption\", \"getNewOptionData\", \"onCreateOption\", \"options\", \"onChange\"];\nvar compareOption = function compareOption() {\n  var inputValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var option = arguments.length > 1 ? arguments[1] : undefined;\n  var accessors = arguments.length > 2 ? arguments[2] : undefined;\n  var candidate = String(inputValue).toLowerCase();\n  var optionValue = String(accessors.getOptionValue(option)).toLowerCase();\n  var optionLabel = String(accessors.getOptionLabel(option)).toLowerCase();\n  return optionValue === candidate || optionLabel === candidate;\n};\nvar builtins = {\n  formatCreateLabel: function formatCreateLabel(inputValue) {\n    return \"Create \\\"\".concat(inputValue, \"\\\"\");\n  },\n  isValidNewOption: function isValidNewOption(inputValue, selectValue, selectOptions, accessors) {\n    return !(!inputValue || selectValue.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }) || selectOptions.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }));\n  },\n  getNewOptionData: function getNewOptionData(inputValue, optionLabel) {\n    return {\n      label: optionLabel,\n      value: inputValue,\n      __isNew__: true\n    };\n  }\n};\nfunction useCreatable(_ref) {\n  var _ref$allowCreateWhile = _ref.allowCreateWhileLoading,\n    allowCreateWhileLoading = _ref$allowCreateWhile === void 0 ? false : _ref$allowCreateWhile,\n    _ref$createOptionPosi = _ref.createOptionPosition,\n    createOptionPosition = _ref$createOptionPosi === void 0 ? 'last' : _ref$createOptionPosi,\n    _ref$formatCreateLabe = _ref.formatCreateLabel,\n    formatCreateLabel = _ref$formatCreateLabe === void 0 ? builtins.formatCreateLabel : _ref$formatCreateLabe,\n    _ref$isValidNewOption = _ref.isValidNewOption,\n    isValidNewOption = _ref$isValidNewOption === void 0 ? builtins.isValidNewOption : _ref$isValidNewOption,\n    _ref$getNewOptionData = _ref.getNewOptionData,\n    getNewOptionData = _ref$getNewOptionData === void 0 ? builtins.getNewOptionData : _ref$getNewOptionData,\n    onCreateOption = _ref.onCreateOption,\n    _ref$options = _ref.options,\n    propsOptions = _ref$options === void 0 ? [] : _ref$options,\n    propsOnChange = _ref.onChange,\n    restSelectProps = _objectWithoutProperties(_ref, _excluded);\n  var _restSelectProps$getO = restSelectProps.getOptionValue,\n    getOptionValue$1 = _restSelectProps$getO === void 0 ? getOptionValue : _restSelectProps$getO,\n    _restSelectProps$getO2 = restSelectProps.getOptionLabel,\n    getOptionLabel$1 = _restSelectProps$getO2 === void 0 ? getOptionLabel : _restSelectProps$getO2,\n    inputValue = restSelectProps.inputValue,\n    isLoading = restSelectProps.isLoading,\n    isMulti = restSelectProps.isMulti,\n    value = restSelectProps.value,\n    name = restSelectProps.name;\n  var newOption = useMemo(function () {\n    return isValidNewOption(inputValue, cleanValue(value), propsOptions, {\n      getOptionValue: getOptionValue$1,\n      getOptionLabel: getOptionLabel$1\n    }) ? getNewOptionData(inputValue, formatCreateLabel(inputValue)) : undefined;\n  }, [formatCreateLabel, getNewOptionData, getOptionLabel$1, getOptionValue$1, inputValue, isValidNewOption, propsOptions, value]);\n  var options = useMemo(function () {\n    return (allowCreateWhileLoading || !isLoading) && newOption ? createOptionPosition === 'first' ? [newOption].concat(_toConsumableArray(propsOptions)) : [].concat(_toConsumableArray(propsOptions), [newOption]) : propsOptions;\n  }, [allowCreateWhileLoading, createOptionPosition, isLoading, newOption, propsOptions]);\n  var onChange = useCallback(function (newValue, actionMeta) {\n    if (actionMeta.action !== 'select-option') {\n      return propsOnChange(newValue, actionMeta);\n    }\n    var valueArray = Array.isArray(newValue) ? newValue : [newValue];\n    if (valueArray[valueArray.length - 1] === newOption) {\n      if (onCreateOption) onCreateOption(inputValue);else {\n        var newOptionData = getNewOptionData(inputValue, inputValue);\n        var newActionMeta = {\n          action: 'create-option',\n          name: name,\n          option: newOptionData\n        };\n        propsOnChange(valueTernary(isMulti, [].concat(_toConsumableArray(cleanValue(value)), [newOptionData]), newOptionData), newActionMeta);\n      }\n      return;\n    }\n    propsOnChange(newValue, actionMeta);\n  }, [getNewOptionData, inputValue, isMulti, name, newOption, onCreateOption, propsOnChange, value]);\n  return _objectSpread(_objectSpread({}, restSelectProps), {}, {\n    options: options,\n    onChange: onChange\n  });\n}\n\nexport { useCreatable as u };\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {useRef, useCallback, useState} from 'react';\nimport {defineMessages} from 'react-intl';\n\ntype CopyOptions = {\n    successCopyTimeout?: number;\n    text: string;\n    trackCallback?: () => void;\n};\n\ntype CopyResponse = {\n    copiedRecently: boolean;\n    copyError: boolean;\n    onClick: () => void;\n};\n\nconst DEFAULT_COPY_TIMEOUT = 4000;\n\nexport default function useCopyText({\n    text,\n    successCopyTimeout: successCopyTimeoutReceived,\n    trackCallback,\n}: CopyOptions): CopyResponse {\n    const [copiedRecently, setCopiedRecently] = useState(false);\n    const [copyError, setCopyError] = useState(false);\n    const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n    let successCopyTimeout = DEFAULT_COPY_TIMEOUT;\n    if (successCopyTimeoutReceived || successCopyTimeoutReceived === 0) {\n        successCopyTimeout = successCopyTimeoutReceived;\n    }\n\n    const onClick = useCallback(() => {\n        trackCallback?.();\n\n        if (timerRef.current) {\n            clearTimeout(timerRef.current);\n            timerRef.current = null;\n        }\n        const clipboard = navigator.clipboard;\n        if (clipboard) {\n            clipboard.writeText(text).\n                then(() => {\n                    setCopiedRecently(true);\n                    setCopyError(false);\n                }).\n                catch(() => {\n                    setCopiedRecently(false);\n                    setCopyError(true);\n                });\n        } else {\n            const textField = document.createElement('textarea');\n            textField.innerText = text;\n            textField.style.position = 'fixed';\n            textField.style.opacity = '0';\n\n            document.body.appendChild(textField);\n            textField.select();\n\n            try {\n                const success = document.execCommand('copy');\n                setCopiedRecently(success);\n                setCopyError(!success);\n            } catch (err) {\n                setCopiedRecently(false);\n                setCopyError(true);\n            }\n            textField.remove();\n        }\n\n        timerRef.current = setTimeout(() => {\n            setCopiedRecently(false);\n            setCopyError(false);\n        }, successCopyTimeout);\n    }, [successCopyTimeout, text, trackCallback]);\n\n    return {\n        copiedRecently,\n        copyError,\n        onClick,\n    };\n}\n\nexport const messages = defineMessages({\n    copy: {id: 'copy_text.copy', defaultMessage: 'Copy'},\n    copied: {id: 'copy_text.copied', defaultMessage: 'Copied'},\n});\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function MailIcon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n    return (\n        <span {...props}>\n            <svg\n                width='24px'\n                height='24px'\n                viewBox='0 0 24 24'\n                role='img'\n                aria-label={formatMessage({id: 'generic_icons.mail', defaultMessage: 'Mail Icon'})}\n            >\n                <path d='M4,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4C2.89,20 2,19.1 2,18V6C2,4.89 2.89,4 4,4M12,11L20,6H4L12,11M4,18H20V8.37L12,13.36L4,8.37V18Z'/>\n            </svg>\n        </span>\n    );\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport { S as Select } from '../../dist/Select-aab027f3.esm.js';\nimport { u as useAsync } from '../../dist/useAsync-c64f5536.esm.js';\nimport { u as useStateManager } from '../../dist/useStateManager-7e1e8489.esm.js';\nimport { u as useCreatable } from '../../dist/useCreatable-84008237.esm.js';\nimport '@babel/runtime/helpers/objectSpread2';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/createSuper';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../../dist/index-641ee5b8.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@floating-ui/dom';\nimport 'use-isomorphic-layout-effect';\nimport 'memoize-one';\n\nvar AsyncCreatableSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var stateManagerProps = useAsync(props);\n  var creatableProps = useStateManager(stateManagerProps);\n  var selectProps = useCreatable(creatableProps);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, selectProps));\n});\nvar AsyncCreatableSelect$1 = AsyncCreatableSelect;\n\nexport { AsyncCreatableSelect$1 as default };\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function MailPlusIcon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n    return (\n        <span {...props}>\n            <svg\n                width='24px'\n                height='24px'\n                viewBox='0 0 24 24'\n                role='img'\n                aria-label={formatMessage({id: 'generic_icons.add-mail', defaultMessage: 'Add Mail Icon'})}\n            >\n                <path d='M3,4C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H14V18H3V8.37L11,13.36L19,8.37V13H21V6A2,2 0 0,0 19,4H3M3,6H19L11,11L3,6M19,15V18H16V20H19V23H21V20H24V18H21V15H19Z'/>\n            </svg>\n        </span>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport type {RefObject} from 'react';\nimport type {MessageDescriptor} from 'react-intl';\nimport {FormattedMessage, defineMessages} from 'react-intl';\nimport {components} from 'react-select';\nimport type {FormatOptionLabelMeta, InputActionMeta, InputProps, Options, StylesConfig, SelectInstance, MultiValue, SingleValue, OptionsOrGroups, GroupBase, MultiValueRemoveProps} from 'react-select';\nimport AsyncCreatable from 'react-select/async-creatable';\n\nimport type {UserProfile} from '@mattermost/types/users';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {isEmail} from 'mattermost-redux/utils/helpers';\nimport {isGuest} from 'mattermost-redux/utils/user_utils';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport CloseCircleSolidIcon from 'components/widgets/icons/close_circle_solid_icon';\nimport MailIcon from 'components/widgets/icons/mail_icon';\nimport MailPlusIcon from 'components/widgets/icons/mail_plus_icon';\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\nimport BotTag from 'components/widgets/tag/bot_tag';\nimport GuestTag from 'components/widgets/tag/guest_tag';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport {getDisplayName, getLongDisplayNameParts, imageURLForUser} from 'utils/utils';\n\nimport './users_emails_input.scss';\n\ntype Props = {\n    placeholder: string;\n    ariaLabel: string;\n    usersLoader: (search: string, callback: (users: UserProfile[]) => void) => Promise<UserProfile[]> | undefined;\n    onUsersLoad?: (users: UserProfile[]) => void;\n    onBlur?: () => void;\n    onChange: (change: Array<UserProfile | string>) => void;\n    showError?: boolean;\n    errorMessage?: MessageDescriptor;\n    errorMessageValues?: Record<string, React.ReactNode>;\n    value: Array<UserProfile | string>;\n    onInputChange: (change: string) => void;\n    inputValue: string;\n    noMatchMessage?: MessageDescriptor;\n    validAddressMessage?: MessageDescriptor;\n    loadingMessage?: MessageDescriptor;\n    emailInvitationsEnabled: boolean;\n    extraErrorText?: React.ReactNode;\n    autoFocus?: boolean;\n    suppressNoOptionsMessage?: boolean;\n    onPaste?: (e: ClipboardEvent) => void;\n}\n\nexport type EmailInvite = {\n    value: string;\n    label: string;\n}\n\ntype State = {\n    options: UserProfile[];\n    prevValue: string;\n}\n\nconst multipleValuesDelimiter = /[\\s,;]+/;\n\nconst messages = defineMessages({\n    loadingDefault: {\n        id: 'widgets.users_emails_input.loading',\n        defaultMessage: 'Loading',\n    },\n    noMatchDefault: {\n        id: 'widgets.users_emails_input.no_user_found_matching',\n        defaultMessage: 'No one found matching **{text}**. Enter their email to invite them.',\n    },\n    validAddressDefault: {\n        id: 'widgets.users_emails_input.valid_email',\n        defaultMessage: 'Add **{email}**',\n    },\n});\n\nexport default class UsersEmailsInput extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        noMatchMessage: messages.noMatchDefault,\n        validAddress: messages.validAddressDefault,\n        loadingMessage: messages.loadingDefault,\n        showError: false,\n    };\n    private selectRef: RefObject<SelectInstance<UserProfile | EmailInvite, true>>;\n\n    constructor(props: Props) {\n        super(props);\n        this.selectRef = React.createRef();\n        this.state = {\n            options: [],\n            prevValue: this.props.inputValue,\n        };\n    }\n\n    renderUserName = (user: UserProfile) => {\n        const parts = getLongDisplayNameParts(user);\n        let fullName = null;\n        if (parts.fullName) {\n            fullName = (<span className='fullname'>{parts.fullName}</span>);\n        }\n        let nickname = null;\n        if (parts.nickname) {\n            nickname = (<span className='nickname'>{parts.nickname}</span>);\n        }\n\n        return (\n            <>\n                {parts.displayName}\n                {fullName}\n                {nickname}\n            </>\n        );\n    };\n\n    loadingMessage = (): string => {\n        const text = (\n            <FormattedMessage\n                {...this.props.loadingMessage}\n            />\n        );\n\n        // faking types to satisfy the interface for the version of react-select we are on.\n        return (<LoadingSpinner text={text}/>) as unknown as string;\n    };\n\n    getOptionValue = (obj: UserProfile | EmailInvite): string => {\n        if (this.isUserProfile(obj)) {\n            return obj.id;\n        }\n        return obj.value;\n    };\n\n    formatOptionLabel = (user: UserProfile | EmailInvite, options: FormatOptionLabelMeta<UserProfile | EmailInvite>) => {\n        const profileImg = imageURLForUser((user as UserProfile).id, (user as UserProfile).last_picture_update);\n        let guestBadge = null;\n        let botBadge = null;\n\n        if ((user as UserProfile).is_bot) {\n            botBadge = <BotTag/>;\n        }\n\n        if (!isEmail((user as EmailInvite).value) && isGuest((user as UserProfile).roles)) {\n            guestBadge = <GuestTag/>;\n        }\n\n        if (options.context === 'menu') {\n            if ((user as EmailInvite).value && isEmail((user as EmailInvite).value)) {\n                return this.getCreateLabel((user as EmailInvite).value);\n            }\n            return (\n                <>\n                    <Avatar\n                        size='lg'\n                        username={(user as UserProfile).username}\n                        url={profileImg}\n                    />\n                    {this.renderUserName(user as UserProfile)}\n                    {botBadge}\n                    {guestBadge}\n                </>\n            );\n        }\n\n        if ((user as EmailInvite).value && isEmail((user as EmailInvite).value)) {\n            return (\n                <>\n                    <MailIcon className='mail-icon'/>\n                    <span>{(user as EmailInvite).value}</span>\n                </>\n            );\n        }\n\n        return (\n            <>\n                <Avatar\n                    size='sm'\n                    username={(user as UserProfile).username}\n                    url={profileImg}\n                />\n                {getDisplayName(user as UserProfile)}\n                {botBadge}\n                {guestBadge}\n            </>\n        );\n    };\n\n    onChange = (value: MultiValue<EmailInvite | UserProfile> | SingleValue<EmailInvite | UserProfile>) => {\n        if (this.props.onChange) {\n            if (value) {\n                this.props.onChange((value as Array<UserProfile | EmailInvite>).map((v) => {\n                    if (this.isUserProfile(v)) {\n                        return v;\n                    }\n                    return v.value;\n                }));\n            } else {\n                this.props.onChange([]);\n            }\n        }\n    };\n\n    getCreateLabel = (value: string) => (\n        <>\n            <MailPlusIcon className='mail-plus-icon'/>\n            <FormattedMarkdownMessage\n                key='widgets.users_emails_input.valid_email'\n                {...this.props.validAddressMessage}\n                values={{email: value}}\n                disableLinks={true}\n            />\n        </>\n    );\n\n    Input = (props: InputProps<EmailInvite | UserProfile, true>) => {\n        const handlePaste = (e: ClipboardEvent) => {\n            e.preventDefault();\n            const clipboardText = e.clipboardData?.getData('Text') || '';\n            this.appendDelimitedValues(clipboardText);\n\n            if (this.props.onPaste) {\n                this.props.onPaste(e);\n            }\n        };\n\n        return (\n            <components.Input\n                {...props}\n\n                // The onPaste is not part of the InputProps type definition. It's fixed in v5 of react-select.\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore - The type definition for the Input component is incorrect.\n                onPaste={handlePaste}\n            />\n        );\n    };\n\n    NoOptionsMessage = (props: Record<string, any>) => {\n        const inputValue = props.selectProps.inputValue;\n        if (!inputValue) {\n            return null;\n        }\n\n        const Msg: any = components.NoOptionsMessage;\n        return (\n            <div className='users-emails-input__option users-emails-input__option--no-matches'>\n                <Msg {...props}>\n                    <FormattedMarkdownMessage\n                        {...this.props.noMatchMessage}\n                        values={{text: inputValue}}\n                        disableLinks={true}\n                    />\n                </Msg>\n            </div>\n        );\n    };\n\n    MultiValueRemove = (props: MultiValueRemoveProps<EmailInvite | UserProfile, true>) => {\n        const {children, innerProps} = props;\n\n        return (\n            <div\n                {...innerProps}\n                role='button'\n                tabIndex={0}\n                onKeyDown={(e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        innerProps.onClick?.(e as unknown as React.MouseEvent<HTMLDivElement, MouseEvent>);\n                    }\n                }}\n            >\n                {children || <CloseCircleSolidIcon/>}\n            </div>\n        );\n    };\n\n    components = {\n        NoOptionsMessage: this.props.suppressNoOptionsMessage ? () => null : this.NoOptionsMessage,\n        MultiValueRemove: this.MultiValueRemove,\n        IndicatorsContainer: () => null,\n        Input: this.Input,\n    };\n\n    handleInputChange = async (inputValue: string, action: InputActionMeta) => {\n        if (action.action === 'input-blur' && action.prevInputValue !== '') {\n            const values = this.formatValuesForCreatable();\n\n            // Check if the input is an existing user by username or email.\n            const option = this.state.options.find((o) =>\n                action.prevInputValue === o.username || action.prevInputValue === ('@' + o.username) ||\n                action.prevInputValue === o.email,\n            );\n\n            if (option) {\n                this.onChange([...values, option]);\n                this.props.onInputChange('');\n                this.setState((state) => ({\n                    ...state,\n                    prevValue: action.prevInputValue,\n                }));\n                return;\n            }\n\n            // Check if the input is a valid new email, if the email invitations are enabled.\n            if (this.props.emailInvitationsEnabled && isEmail(action.prevInputValue)) {\n                const email = action.prevInputValue;\n                this.onChange([...values, {value: email, label: email}]);\n                this.props.onInputChange('');\n                this.setState((state) => ({\n                    ...state,\n                    prevValue: action.prevInputValue,\n                }));\n            }\n        } else if (action.action === 'input-change' && action.prevInputValue !== '' && action.prevInputValue?.[action.prevInputValue.length - 1].match(multipleValuesDelimiter)) {\n            const newValuesCount = await this.appendDelimitedValues(action.prevInputValue);\n            if (newValuesCount === 0) {\n                return;\n            }\n        }\n        if (action.action !== 'input-blur' && action.action !== 'menu-close') {\n            this.props.onInputChange(inputValue);\n            this.setState((state) => ({\n                ...state,\n                prevValue: action.prevInputValue,\n            }));\n        }\n    };\n\n    formatValuesForCreatable = () => {\n        return this.props.value.map((v) => {\n            if ((v as UserProfile).id) {\n                return v as UserProfile;\n            }\n            return {label: v, value: v} as EmailInvite;\n        });\n    };\n\n    optionsLoader = (_input: string, callback: (options: UserProfile[]) => void) => {\n        const customCallback = (options: UserProfile[]) => {\n            this.setState({options});\n            const accessibleProfiles = options.map((user: UserProfile) => ({...user, label: user.username}));\n            callback(accessibleProfiles);\n            if (this.props.onUsersLoad) {\n                this.props.onUsersLoad(options);\n            }\n        };\n        const result = this.props.usersLoader(this.props.inputValue, customCallback);\n        if (result && result.then) {\n            result.then(customCallback);\n        }\n    };\n\n    showAddEmail = (inputValue: string, value: Options<UserProfile | EmailInvite>, options: OptionsOrGroups<EmailInvite | UserProfile, GroupBase<EmailInvite | UserProfile>>): boolean => {\n        return this.props.emailInvitationsEnabled && options.length === 0 && isEmail(inputValue);\n    };\n\n    onFocus = () => {\n        this.selectRef.current?.onInputChange(this.props.inputValue, {action: 'set-value', prevInputValue: this.props.inputValue});\n    };\n\n    onBlur = () => {\n        this.selectRef.current?.onInputChange(this.props.inputValue, {action: 'input-blur', prevInputValue: this.state.prevValue});\n        if (this.props.onBlur) {\n            this.props.onBlur();\n        }\n    };\n\n    appendDelimitedValues = async (values: string): Promise<number> => {\n        const existingValues = this.formatValuesForCreatable();\n        const entries = [...new Set(values.split(multipleValuesDelimiter))];\n\n        if (entries.length === 0) {\n            return 0;\n        }\n\n        const isUniqueEmail = (values: Array<UserProfile | EmailInvite>, email: string): boolean => {\n            return values.findIndex((v) => (\n                this.isEmailInvite(v) && v.value === email) || (this.isUserProfile(v) && v.email === email),\n            ) === -1;\n        };\n\n        const handleEmail = async (email: string): Promise<UserProfile | string | null> => {\n            if (!isUniqueEmail(existingValues, email)) {\n                return null;\n            }\n            const resp = await this.searchByEmail(email);\n            return resp || email;\n        };\n\n        const isUniqueUsername = (values: Array<UserProfile | EmailInvite>, username: string): boolean => {\n            return values.findIndex((v) => this.isUserProfile(v) && v.username === username) === -1;\n        };\n\n        const handleUsername = async (username: string): Promise<UserProfile | null> => {\n            if (!isUniqueUsername(existingValues, username)) {\n                return null;\n            }\n            return this.searchByUsername(username);\n        };\n\n        const promises = entries.map(async (entry) => {\n            if (entry === '') {\n                return Promise.resolve(null);\n            }\n\n            let res;\n            if (this.props.emailInvitationsEnabled && isEmail(entry)) {\n                res = await handleEmail(entry);\n            } else {\n                res = await handleUsername(entry);\n            }\n\n            if (typeof res === 'string') {\n                return Promise.resolve({value: res, label: res});\n            } else if (this.isUserProfile(res as UserProfile)) {\n                return Promise.resolve(res);\n            }\n            return Promise.resolve(null);\n        });\n\n        const newValues: Array<UserProfile | EmailInvite> = [];\n\n        (await Promise.allSettled(promises)).reduce((acc, v) => {\n            if (v.status === 'fulfilled') {\n                acc.push(v.value);\n            }\n            return acc;\n        }, [] as Array<UserProfile | EmailInvite | null>).forEach((v) => {\n            if (!v) {\n                return;\n            }\n\n            if (this.isEmailInvite(v) && (!isUniqueEmail(existingValues, v.value) || !isUniqueEmail(newValues, v.value))) {\n                return;\n            }\n\n            if (this.isUserProfile(v) && (\n                !isUniqueUsername(existingValues, v.username) || !isUniqueEmail(existingValues, v.email) ||\n                !isUniqueUsername(newValues, v.username) || !isUniqueEmail(newValues, v.email)\n            )) {\n                return;\n            }\n\n            newValues.push(v);\n        });\n\n        this.onChange([...existingValues, ...newValues]);\n        this.props.onInputChange('');\n\n        return newValues.length;\n    };\n\n    isUserProfile = (obj: UserProfile | EmailInvite): obj is UserProfile => {\n        return (obj as UserProfile).id !== undefined;\n    };\n\n    isEmailInvite = (obj: UserProfile | EmailInvite): obj is EmailInvite => {\n        return (obj as EmailInvite).value !== undefined;\n    };\n\n    searchByEmail = async (value: string): Promise<UserProfile | null> => {\n        let data;\n        try {\n            data = await Client4.getUserByEmail(value);\n        } catch (error) {\n            return null;\n        }\n        return data?.delete_at === 0 ? data : null;\n    };\n\n    searchByUsername = async (value: string): Promise<UserProfile | null> => {\n        let data;\n        try {\n            data = await Client4.getUserByUsername(value);\n        } catch (error) {\n            return null;\n        }\n        return data?.delete_at === 0 ? data : null;\n    };\n\n    render() {\n        const values = this.formatValuesForCreatable();\n\n        const Msg: any = components.NoOptionsMessage;\n\n        const styles = {\n            placeholder: (css) => ({\n                ...css,\n\n                pointerEvents: 'none',\n                userSelect: 'none',\n            }),\n            input: (css) => ({\n                ...css,\n\n                display: 'flex',\n                flex: '1 1 auto',\n\n                '> div': {\n                    width: '100%',\n                },\n\n                input: {\n                    width: '100% !important',\n                    textAlign: 'left',\n                },\n            }),\n        } satisfies StylesConfig<UserProfile | EmailInvite, true >;\n\n        return (\n            <>\n                <AsyncCreatable\n                    ref={this.selectRef}\n                    onChange={this.onChange}\n                    loadOptions={this.optionsLoader}\n                    isValidNewOption={this.showAddEmail}\n                    isMulti={true}\n                    isClearable={false}\n                    className={classNames(\n                        'UsersEmailsInput',\n                        this.props.showError ? 'error' : '',\n                        {empty: this.props.inputValue === ''},\n                        {'no-selections': values.length === 0},\n                    )}\n                    classNamePrefix='users-emails-input'\n                    placeholder={this.props.placeholder}\n                    components={this.components}\n                    getOptionValue={this.getOptionValue}\n                    formatOptionLabel={this.formatOptionLabel}\n                    defaultOptions={false}\n                    defaultMenuIsOpen={false}\n                    openMenuOnClick={false}\n                    loadingMessage={this.loadingMessage}\n                    onInputChange={this.handleInputChange}\n                    inputValue={this.props.inputValue}\n                    openMenuOnFocus={true}\n                    onFocus={() => this.onFocus}\n                    onBlur={() => this.onBlur}\n                    tabSelectsValue={true}\n                    value={values}\n                    aria-label={this.props.ariaLabel}\n                    autoFocus={this.props.autoFocus}\n                    styles={styles}\n                />\n                {this.props.showError && (\n                    <div className='InputErrorBox'>\n                        <Msg>\n                            <FormattedMarkdownMessage\n                                {...this.props.errorMessage}\n                                values={this.props.errorMessageValues}\n                                disableLinks={true}\n                            />\n                        </Msg>\n                        {this.props.extraErrorText || null}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\n// `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n$({ target: 'Promise', stat: true }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","// TODO: Remove from `core-js@4`\nrequire('../modules/es.promise.all-settled.js');\n"],"names":["_excluded","compareOption","option","arguments","length","undefined","accessors","candidate","String","toLowerCase","optionValue","getOptionValue","optionLabel","getOptionLabel","builtins","formatCreateLabel","inputValue","concat","isValidNewOption","selectValue","selectOptions","some","getNewOptionData","label","value","__isNew__","useCreatable","_ref","_ref$allowCreateWhile","allowCreateWhileLoading","_ref$createOptionPosi","createOptionPosition","_ref$formatCreateLabe","_ref$isValidNewOption","_ref$getNewOptionData","onCreateOption","_ref$options","options","propsOptions","propsOnChange","onChange","restSelectProps","_restSelectProps$getO","getOptionValue$1","g","_restSelectProps$getO2","getOptionLabel$1","isLoading","isMulti","name","newOption","useMemo","useCallback","newValue","actionMeta","action","valueArray","Array","isArray","newOptionData","newActionMeta","DEFAULT_COPY_TIMEOUT","useCopyText","text","successCopyTimeout","successCopyTimeoutReceived","trackCallback","copiedRecently","setCopiedRecently","useState","copyError","setCopyError","timerRef","useRef","onClick","current","clearTimeout","clipboard","navigator","writeText","then","catch","textField","document","createElement","innerText","style","position","opacity","body","appendChild","select","success","execCommand","err","remove","setTimeout","messages","defineMessages","copy","id","defaultMessage","copied","MailIcon","props","formatMessage","useIntl","React","width","height","viewBox","role","d","AsyncCreatableSelect$1","forwardRef","ref","stateManagerProps","u","creatableProps","selectProps","S","MailPlusIcon","multipleValuesDelimiter","loadingDefault","noMatchDefault","validAddressDefault","UsersEmailsInput","constructor","super","_defineProperty","user","parts","getLongDisplayNameParts","fullName","className","nickname","displayName","FormattedMessage","this","loadingMessage","LoadingSpinner","obj","isUserProfile","profileImg","imageURLForUser","last_picture_update","guestBadge","botBadge","is_bot","BotTag","isEmail","isGuest","roles","GuestTag","context","getCreateLabel","Avatar","size","username","url","renderUserName","getDisplayName","map","v","FormattedMarkdownMessage","Object","assign","key","validAddressMessage","values","email","disableLinks","components","Input","onPaste","e","_e$clipboardData","preventDefault","clipboardText","clipboardData","getData","appendDelimitedValues","Msg","NoOptionsMessage","noMatchMessage","children","innerProps","tabIndex","onKeyDown","_innerProps$onClick","stopPropagation","call","CloseCircleSolidIcon","suppressNoOptionsMessage","MultiValueRemove","IndicatorsContainer","async","_action$prevInputValu","prevInputValue","formatValuesForCreatable","state","find","o","onInputChange","setState","_objectSpread","prevValue","emailInvitationsEnabled","match","_input","callback","customCallback","accessibleProfiles","onUsersLoad","result","usersLoader","_this$selectRef$curre","selectRef","_this$selectRef$curre2","onBlur","existingValues","entries","Set","split","isUniqueEmail","findIndex","isEmailInvite","handleEmail","searchByEmail","isUniqueUsername","handleUsername","searchByUsername","promises","entry","Promise","resolve","res","newValues","allSettled","reduce","acc","status","push","forEach","_data","data","Client4","getUserByEmail","error","delete_at","_data2","getUserByUsername","render","styles","placeholder","css","pointerEvents","userSelect","input","display","flex","textAlign","AsyncCreatable","loadOptions","optionsLoader","showAddEmail","isClearable","classNames","showError","empty","classNamePrefix","formatOptionLabel","defaultOptions","defaultMenuIsOpen","openMenuOnClick","handleInputChange","openMenuOnFocus","onFocus","tabSelectsValue","ariaLabel","autoFocus","errorMessage","errorMessageValues","extraErrorText","validAddress","$","aCallable","newPromiseCapabilityModule","perform","iterate","target","stat","iterable","C","capability","f","reject","promiseResolve","counter","remaining","promise","index","alreadyCalled","reason"],"sourceRoot":""}